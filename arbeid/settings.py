"""
Django settings for elements project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9=9u7c35!*p_h674kv*t^8ntefnf*#)z_h%6$sdfoisnepuifonspoinef#b(oe=_mwysw+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CORS_ORIGIN_ALLOW_ALL = True


INSTALLED_APPS = [
    'registration',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'corsheaders',
    'balder',
    'taggit',
    'channels',
    'lord',
    'graphene_django',
    "rest_framework",
    'oauth2_provider'
]



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'arbeid.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'arbeid.wsgi.application'
ASGI_APPLICATION = 'arbeid.routing.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("POSTGRES_DB"),
        "USER": os.environ.get("POSTGRES_USER"),
        "PASSWORD":os.environ.get("POSTGRES_PASSWORD"),
        "HOST": os.environ.get("POSTGRES_SERVICE_HOST"),
        "PORT": os.environ.get("POSTGRES_SERVICE_PORT"),
    }
}

CHANNEL_LAYERS = {
    "default": {
        # This example app uses the Redis channel layer implementation channels_redis
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("redis",6379)],
        },
    },
}

AUTH_USER_MODEL = 'lord.HerreUser'

AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    'django.contrib.auth.backends.ModelBackend',
)

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


BALDER = {
    "SUBSCRIPTIONS": False
}


GRAPHENE = {
    "SCHEMA": "balder.schema.graphql_schema"
}

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'console': {
            '()': 'colorlog.ColoredFormatter',  # colored output
            # exact format is not important, this is the minimum information
            'format': '%(log_color)s[%(levelname)s]  %(name)s %(asctime)s :: %(message)s',
            'log_colors': {
                'DEBUG':    'bold_black',
                'INFO':     'green',
                'WARNING':  'yellow',
                'ERROR':    'red',
                'CRITICAL': 'bold_red',
            },
        },
    },
    'handlers': {
        'console': {
            'class': 'colorlog.StreamHandler',
            'formatter': 'console',
        },
    },
    'loggers': {
    # root logger
        '': {
            'level': "INFO",
            'handlers': ['console'],
        },
        'oauthlib': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'delt': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'oauth2_provider': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}


ACCOUNT_ACTIVATION_DAYS = 7 # One-week activation window; you may, of course, use a different value.
REGISTRATION_AUTO_LOGIN = True # Automatically log the user in.

# Unomment and re run
OAUTH2_PROVIDER_APPLICATION_MODEL = "oauth2_provider.Application"
OAUTH2_PROVIDER_ACCESS_TOKEN_MODEL = "oauth2_provider.AccessToken"
OAUTH2_PROVIDER_REFRESH_TOKEN_MODEL = "oauth2_provider.RefreshToken"


OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {
        'read': 'Reading all of your Data ',
        'read_starred': "Reading your shared Data",
        'write': 'Modifying all of your Data',
        'provider': 'Can act as a provider',
        'introspection': 'Introspect token scope',
        'can_provide': "Can Provide Nodes",
        'can_assign': "Can Assign Nodes",
        'can_forward_bounce': "Can reserve and assign to Nodes mimicking other Users (only backend and admin)",
        'profile': 'Access to your Profile (including Email, Name and Address',
    },
    'ACCESS_TOKEN_EXPIRE_SECONDS': 60 * 60 * 24, # TOkens are valid for 24 Hours
    'ALLOWED_REDIRECT_URI_SCHEMES': ["http","https","com.example.feuer"],
    "OAUTH2_SERVER_CLASS": "lord.oauth.server.JWTServer",
    "OAUTH2_VALIDATOR_CLASS": "lord.oauth.validator.JWTValidator",
}


OAUTH2_JWT = {
    "PRIVATE_KEY": """
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAvIrkAA1Tr8pLRR08xXEszuyi/+QGRQ3J7o5j7B+HJLv2MWpp
d+fgoPQYc9nOkZcA9Jizsvm0bqcXe/8zdxaUz7bA+nq3hxLolO4q4SXRxNuBIcNr
fLizFrWku5csO9ZfS4EXQGOGAWsVE1WbSRBCgAcOR8eq8gB0ai4UByB/xGlwobz1
bkuXd3jGVN2oeCo7gbij/JaMrOSkh9wX/WqZlbrEWEFfgURENACn45Hm4ojjLepw
/b2j7ZrHMQxvY1THi6lZ6bp9NdfkzyE6JhZbSVOzd/dHy+gLBx2UuvmovVEhhxzw
RJYtPdqlOWuUOjO24AlpPv7j+BSY7eGSzYU5oQIDAQABAoIBAALJpu9dQxSBUDWY
ZhKhRsFUfGB+NZ2Fw6uUTWPrX2sqoExAv4h3VDntAgOMf+JlMi1rqJSH3qQYMl+x
+UfUfKTJlfbeI6KKpAe3scicb4qSmEkwg4FXlcZLL0Fazdugos4R/Y8FKbERrUEY
7e/ZnrIX6J0lFaD4YsBDKCam01zLD9EW+2e565+KwjK8Cqf10UyzCPYSF9OcYCD3
bczX01pC2yugUgQHrALleT1L1ZQt2ioMlaAksfUr7AcVAq06J3N1rwwCr9dOQ3bM
3sRWzEaPD0G6S1ZpwZ3k4ns8lfl1Gw6SaAXMkVEC4Ti+JRG4MOlYYOsAGx1mc68u
VQQXvrUCgYEA29gfZ54Ft9YApQRBpWC6xiGT1Uj+dcznpPuPmcJNljtLdz1Bsib7
FepMyGqBPhRogZ0hYlc5EcpAxqh9MjaQJ+hD2hM+22gchRwjOBtk8nhmSLMlJzZX
XeiwKdVpmifmXEaVP92HB9HGkIF41KKqfeoqqJjKWOnmCORRPYDrCcMCgYEA24zn
qRoo/AqEFlpSMyxyCCDp+5X9kL6lnsOhn7YPfNuRiCgUHUbRfexQxA7XXPqpJAkO
46jPkvdDfklod3+BE3SZaTLBatqmTKkg/tDzS2WT58luPwsa1vQGSMi/ji0KeDGc
7m7UM4kWZakOibupSXZ0Nuf7cp3AX4X+LyTF1MsCgYEAtffwFq5AAWiLZAtf4ulr
76+/U911ckBGxNLMi/K+kclGr83uYO3PCtbC82jkzWPLFO3gwit8O3Nzpnu0FSoA
rGeeMhWYA7frU2p05G4YYnKyBx7xc8GRE1QU7KuPG2BHVr29r/1HVXuXpejlAOwb
vtlisea2Jl6EX3vMmuHoqk0CgYACS3W8ab6V69I3nZgQWt2SQi3P6GBvG98FSsws
rC17Q5xAzRJwv+W+qDKr6e/MU/5ilwmlzYTl51m4PzItVZLWzjgwRkyJPmHQmU/z
+eEhH52tJYjWddpA9un95sNBzCy41uPqBhSHuV4Xj+3L+L8rOma6kDAroYR6Ox9O
BNdggwKBgBxEvmWswlE8r3Ej8tUb80v29jjh1tzDba/fL4xaN0ZMlnh1aa6KLubp
V57aaQpu670EOYxZi/TBdPZJDu4u6xPjRYnmplicoQKtLF9ZsA8g93Q233lXrhWb
2N46/mnTS3/Ck1u8MJDuJlJWPnUEZCRIWoVZpnc8tC6YwQ3s1JWj
-----END RSA PRIVATE KEY-----
""",
    "PUBLIC_KEY": """
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvIrkAA1Tr8pLRR08xXEs
zuyi/+QGRQ3J7o5j7B+HJLv2MWppd+fgoPQYc9nOkZcA9Jizsvm0bqcXe/8zdxaU
z7bA+nq3hxLolO4q4SXRxNuBIcNrfLizFrWku5csO9ZfS4EXQGOGAWsVE1WbSRBC
gAcOR8eq8gB0ai4UByB/xGlwobz1bkuXd3jGVN2oeCo7gbij/JaMrOSkh9wX/WqZ
lbrEWEFfgURENACn45Hm4ojjLepw/b2j7ZrHMQxvY1THi6lZ6bp9NdfkzyE6JhZb
SVOzd/dHy+gLBx2UuvmovVEhhxzwRJYtPdqlOWuUOjO24AlpPv7j+BSY7eGSzYU5
oQIDAQAB
-----END PUBLIC KEY-----""",
    "KEY_TYPE": "RS256",
    "ISSUER": "arnheim"
}





REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        #'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    )
}

ENSURED_APPS = [
    {
        "NAME": "Bergen Test",
        "CLIENT_ID": "DSNwVKbSmvKuIUln36FmpWNVE2KrbS2oRX0ke8PJ",
        "CLIENT_SECRET": "Gp3VldiWUmHgKkIxZjL2aEjVmNwnSyIGHWbQJo6bWMDoIUlBqvUyoGWUWAe6jI3KRXDOsD13gkYVCZR0po1BLFO9QT4lktKODHDs0GyyJEzmIjkpEOItfdCC4zIa3Qzu",
        "CLIENT_TYPE": "public",
        "GRANT_TYPE": "client-credentials",
        "REDIRECT_URIS": []
    },
    {
        "NAME": "Port",
        "CLIENT_ID": "7JbA1yi2iQuqc6b4BUjtcYLBOB92V6fQfaE87EFF",
        "CLIENT_SECRET": "699FBMqg32oRcwQ4m06R8m5j1AWIoXiDnJ2UqEpAEtNoegtpmk69Wg3zD8Hk3C8pKws6QHzEhuuIU14LmUHq2qM12Pze37atxTslAnrOPBGv3PEKjKGMvcSguRW1JGZ6",
        "CLIENT_TYPE": "confidential",
        "GRANT_TYPE": "client-credentials",
        "REDIRECT_URIS": []

    },
    {
        "NAME": "Elements",
        "CLIENT_ID": "AoNMdwnUGwULwi0UVOD04wpoDjsmX8i8BniBRarF",
        "CLIENT_SECRET": "ke9LXivKkZSyi57eLWFGozHtXH66JUjhJZOisTuxNf0vBo5QcAQAUwHyzYQZgRKlaPNuQNZlxsQbTus1ruThhocOGs4TFg4L2KtXcqwGVRsWWb4k9CEzHt7R3UADjNgW",
        "CLIENT_TYPE": "confidential",
        "GRANT_TYPE": "client-credentials",
        "REDIRECT_URIS": []

    },
    {
        "NAME": "Fluss",
        "CLIENT_ID": "nX1RcMSQ3FkQWCuw127B1TwZTpxyl7jloDP8GscC",
        "CLIENT_SECRET": "YdZFYHU2nNn88qPxkqPHqAmiFcznnZBrLCr9iIPjcPtnZ2hjN54Ws0grbxefYf0nsbmImcTHtVgLmzlEnjJJWvchjBq9JRpWFNBvpDKF8WHjZPnsL9Dna3R9Ccfxr9Of",
        "CLIENT_TYPE": "confidential",
        "GRANT_TYPE": "client-credentials",
        "REDIRECT_URIS": []
    },
    {
        "NAME": "Mutter",
        "CLIENT_ID": "PsdU71PlUYeC4hP4aDf8pTdm2Hv9xYKdrxCFI5RO",
        "CLIENT_SECRET": "8jXSNhrH7fllN8cGjxg7y2Jl1INb22wlDSmUBepb9aRDGV3al5pfNzswS85MPEvpN5vnfrPkrIERQ6kcMHLiISr4HcYirivdtrnyMjFMlzKGvlCrwfkNJmtQgCLZmH4X",
        "CLIENT_TYPE": "confidential",
        "GRANT_TYPE": "authorization-code",
        "REDIRECT_URIS": ["http://localhost:6789/callback","com.example.feuer:/callback", "http://localhost:3000", "https://arkitekt-fluss.netlify.app"]
    },
    {
        "NAME": "Trontheim",
        "CLIENT_ID": "huKQboFgvLaqfVb23QAJ7Kchp9Rzl87vCVRgWHjZ",
        "CLIENT_SECRET": "xfhe44E558wXCbQqHs3jbQWyOKxySVllFN5IjDu9dsf9Phbm268wsKqlavE6Ss6NA8Xr0DMV2tVSU1N10cAwcr3rj27zB11nL9cdahC6F9UEsM7NZ6F7H3G4mCJOm3U8",
        "CLIENT_TYPE": "public",
        "GRANT_TYPE": "implicit",
        "REDIRECT_URIS": ["http://localhost:6789/callback","http://localhost:3000/callback","http://100.108.99.108:3000/callback","https://arkitekt-fluss.netlify.app"]
    },
    {
        "NAME": "PasswordApp",
        "CLIENT_ID": "EEjI4z8Gahr6TU6dujnq2Q6pAojcit3iCILF9Ggm",
        "CLIENT_SECRET": "Onbmcglhf18rXi0D1pvfeCwnuIGZZV8xpbktzdFXaMs5zpIFG5NJRR2R7pS7RlCgZ6bfiId317XUIrQ1EudJye2WNpZ5jjvbQWul4nyuEECNestHCIUEPCBb3B8DmdwV",
        "CLIENT_TYPE": "public",
        "GRANT_TYPE": "password",
        "REDIRECT_URIS": []
    }
]


LOGIN_REDIRECT_URL = "/"
# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True



